/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Response model for text generation.
 */
export type ImageToTextResponse = {
  /**
   * The generated text.
   */
  text: string;
};

/** @internal */
export const ImageToTextResponse$inboundSchema: z.ZodType<
  ImageToTextResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  text: z.string(),
});

/** @internal */
export type ImageToTextResponse$Outbound = {
  text: string;
};

/** @internal */
export const ImageToTextResponse$outboundSchema: z.ZodType<
  ImageToTextResponse$Outbound,
  z.ZodTypeDef,
  ImageToTextResponse
> = z.object({
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageToTextResponse$ {
  /** @deprecated use `ImageToTextResponse$inboundSchema` instead. */
  export const inboundSchema = ImageToTextResponse$inboundSchema;
  /** @deprecated use `ImageToTextResponse$outboundSchema` instead. */
  export const outboundSchema = ImageToTextResponse$outboundSchema;
  /** @deprecated use `ImageToTextResponse$Outbound` instead. */
  export type Outbound = ImageToTextResponse$Outbound;
}

export function imageToTextResponseToJSON(
  imageToTextResponse: ImageToTextResponse,
): string {
  return JSON.stringify(
    ImageToTextResponse$outboundSchema.parse(imageToTextResponse),
  );
}

export function imageToTextResponseFromJSON(
  jsonString: string,
): SafeParseResult<ImageToTextResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ImageToTextResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ImageToTextResponse' from JSON`,
  );
}
